{"ast":null,"code":"import data from '../data.json';\nimport { ADD_STUDENT } from './type';\nconst initialState = {\n  studentList: data\n};\nconst studentReducer = function () {\n  let state = arguments.length > 0 && arguments[0] !== undefined ? arguments[0] : initialState;\n  let action = arguments.length > 1 ? arguments[1] : undefined;\n  switch (action.type) {\n    case ADD_STUDENT:\n      {\n        const cloneStudentList = [...state.studentList];\n        if (action.payload.id) {\n          const index = cloneStudentList.findIndex(student => student.id === action.payload.id);\n          if (index != -1) {\n            cloneStudentList[index] = action.payload;\n          }\n        } else {\n          const student = {\n            ...action.payload\n          };\n          cloneStudentList.push(student);\n          console.log(cloneStudentList);\n        }\n        state.studentList = cloneStudentList;\n        return {\n          ...state\n        };\n      }\n      ;\n    default:\n      return {\n        ...state\n      };\n  }\n};\nexport default studentReducer;","map":{"version":3,"names":["data","ADD_STUDENT","initialState","studentList","studentReducer","state","arguments","length","undefined","action","type","cloneStudentList","payload","id","index","findIndex","student","push","console","log"],"sources":["/Users/dongtran/studen-management/src/components/duck/reducer.jsx"],"sourcesContent":["import data from '../data.json'\nimport {ADD_STUDENT} from './type'\n\nconst initialState = {\n    studentList: data,\n}\n\n\n\nconst studentReducer = (state = initialState, action) => {\n    switch (action.type) {\n        case ADD_STUDENT: {\n            const cloneStudentList = [...state.studentList];\n            if(action.payload.id){\n                const index = cloneStudentList.findIndex((student) => student.id === action.payload.id)\n                if(index != -1) {\n                    cloneStudentList[index] = action.payload;\n                }\n            }else{\n                const student = {...action.payload}\n                cloneStudentList.push(student);\n                console.log(cloneStudentList);\n            }\n\n            state.studentList = cloneStudentList;\n            return { ...state };\n        };\n    \n        default:\n            return { ...state };\n    }\n}\n\nexport default studentReducer;"],"mappings":"AAAA,OAAOA,IAAI,MAAM,cAAc;AAC/B,SAAQC,WAAW,QAAO,QAAQ;AAElC,MAAMC,YAAY,GAAG;EACjBC,WAAW,EAAEH;AACjB,CAAC;AAID,MAAMI,cAAc,GAAG,SAAAA,CAAA,EAAkC;EAAA,IAAjCC,KAAK,GAAAC,SAAA,CAAAC,MAAA,QAAAD,SAAA,QAAAE,SAAA,GAAAF,SAAA,MAAGJ,YAAY;EAAA,IAAEO,MAAM,GAAAH,SAAA,CAAAC,MAAA,OAAAD,SAAA,MAAAE,SAAA;EAChD,QAAQC,MAAM,CAACC,IAAI;IACf,KAAKT,WAAW;MAAE;QACd,MAAMU,gBAAgB,GAAG,CAAC,GAAGN,KAAK,CAACF,WAAW,CAAC;QAC/C,IAAGM,MAAM,CAACG,OAAO,CAACC,EAAE,EAAC;UACjB,MAAMC,KAAK,GAAGH,gBAAgB,CAACI,SAAS,CAAEC,OAAO,IAAKA,OAAO,CAACH,EAAE,KAAKJ,MAAM,CAACG,OAAO,CAACC,EAAE,CAAC;UACvF,IAAGC,KAAK,IAAI,CAAC,CAAC,EAAE;YACZH,gBAAgB,CAACG,KAAK,CAAC,GAAGL,MAAM,CAACG,OAAO;UAC5C;QACJ,CAAC,MAAI;UACD,MAAMI,OAAO,GAAG;YAAC,GAAGP,MAAM,CAACG;UAAO,CAAC;UACnCD,gBAAgB,CAACM,IAAI,CAACD,OAAO,CAAC;UAC9BE,OAAO,CAACC,GAAG,CAACR,gBAAgB,CAAC;QACjC;QAEAN,KAAK,CAACF,WAAW,GAAGQ,gBAAgB;QACpC,OAAO;UAAE,GAAGN;QAAM,CAAC;MACvB;MAAC;IAED;MACI,OAAO;QAAE,GAAGA;MAAM,CAAC;EAAC;AAEhC,CAAC;AAED,eAAeD,cAAc"},"metadata":{},"sourceType":"module","externalDependencies":[]}